{"version":3,"file":"main.js","mappings":"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","sources":["webpack://to-do-list/./src/to-do-lists.js","webpack://to-do-list/./src/to-do-items.js","webpack://to-do-list/./src/plans-array.js","webpack://to-do-list/./src/dynamic-buttons.js","webpack://to-do-list/./src/input-toggle.js","webpack://to-do-list/./src/DOMfunctions.js","webpack://to-do-list/./src/index.js"],"sourcesContent":["/*This module is for creating new user projects on the To Do List*/\n\nexport default class Plan {\n    constructor(title){\n        this._title = title;\n        this._toDoItems = [];\n    }\n\n    get title() {\n        return this._title;\n    }\n\n    get toDoItems() {\n        return this._toDoItems;\n    }\n\n    addToDoItems(item) {\n        this.toDoItems.push(item);\n    }\n\n    removeToDoItems(item) {\n        for(let i = 0; i < this.toDoItems.length; i++) {\n            if(item === this.toDoItems[i].title) {\n                this.toDoItems.splice(i, 1);\n            }\n        }\n\n    }\n\n}","/*This module is for creating new Do Do List items*/\n\nexport default class PlanItem {\n    constructor(parent, title, dueDate) {\n        this._parent = parent;\n        this._title = title;\n        this._dueDate = dueDate;\n    }\n\n    get parent() {\n        return this._parent;\n    }\n\n    get title() {\n        return this._title;\n    }\n\n    set title(value) {\n        this._title = value;\n    }\n\n    get dueDate() {\n        return this._dueDate;\n    }\n\n    set dueDate(value) {\n        this._dueDate = value;\n    }\n\n}","export const planArray = [];\n\nexport function pushPlan(plan) {\n    planArray.push(plan)\n}\n\nexport const arrayDel = {\n\n    del: function (element) {\n\n        function splitArray() { \n            const index = planArray.findIndex(obj => obj.title === element.className);//element in this case refers to the delete button's class\n            return index;\n        }\n\n        planArray.forEach((obj) => {\n            if (element.classList.contains(obj.title)) {\n                planArray.splice(splitArray(), 1);\n            }\n        });\n    }\n\n}\n\nexport const itemToList = {\n\n    addTask: function (title, task) {\n\n        function pushToProject() {\n        const index = planArray.findIndex(obj => obj.title === title.textContent);//element here refers to the project's title DOM element\n        return index;\n        }\n\n        planArray.forEach((obj) => {\n            if(title.textContent === obj.title) {\n                obj.addToDoItems(task);\n                console.log(obj);\n            }\n        });\n\n    \n\n},\n\n    // displayTasks: function(target) { \n\n    //     function displayToDom() {\n    //     const index = planArray.findIndex(obj => obj.title === target.textContent);\n    //     return index;\n    //     }\n\n    //     planArray.forEach((obj) => {\n    //         if(obj.title === target.textContent) {\n                \n    //             console.log(obj.toDoItems());\n    //         }\n    //     })\n    // }\n}\n\n\n\n","export function createButton(title, elemClass) {\n    const btn = document.createElement('button');\n    btn.classList.add(`${elemClass}`);//note: do NOT add periods into the formatted strings for this!\n    btn.setAttribute('id', title);\n    btn.textContent = title;\n    return btn;\n}\n\n\nexport function btnDel(element, elemClass) {\n    const button = document.querySelectorAll(`${elemClass}`);\n    button.forEach((btn) => {\n        if (element.classList.contains(btn.id)) {\n        btn.remove();\n        }\n    });\n}\n\nexport const xBtn = document.querySelectorAll('.x');","export const inputToggle = {\n\n    toggleOn: function (toggle) {\n        toggle.classList.add('visible');\n        toggle.classList.remove('invisible')\n    },\n    \n    toggleOff: function (toggle) {\n        toggle.classList.add('invisible');\n        toggle.classList.remove('visible');\n    }\n};","import Plan from './to-do-lists';\nimport PlanItem from './to-do-items';\nimport * as list from './plans-array.js';\nimport * as dynButton from './dynamic-buttons.js';\nimport {inputToggle} from './input-toggle.js';\n\n// Delete buttons call removal method and deletes from DOM\n\n// The newly created 'plan' buttons on the sidebar will populate the display with the corresponding object's data \n// That object's display will have an 'add item' button that will open a form that submits and creates a new item object\n// The subsequent item button will populate the display and have a few functional buttons to edit the corresponding item object and change the DOM values\n\n\nconst plansPanel = document.querySelector('#plans-panel');\nconst planTitle = document.querySelector('#plan-title');\n\n//project creation\nconst newPlanBtn = document.querySelector('#add-plans'); \nconst planForm = document.querySelector('#plan-form-id');\nnewPlanBtn.addEventListener('click', () => {\n    inputToggle.toggleOn(planForm);\n    inputToggle.toggleOff(itemForm);\n    itemInput.value = '';//empties the input value of the other form\n});\n\nconst plansList = document.querySelector('#plans-list');\nconst planInput = document.querySelector('#plan-input');\nconst planSubmit = document.querySelector('#plan-submit');\nfunction planSubmitFunc(e) {\n    e.preventDefault();\n    let newPlan = new Plan(planInput.value);\n    list.pushPlan(newPlan);\n    plansList.appendChild(dynButton.createButton(newPlan.title, 'plan-buttons'));\n    planInput.value = ''\n    inputToggle.toggleOff(planForm);\n}\nplanSubmit.addEventListener('click', planSubmitFunc);\n\nconst planCancel = document.querySelector('#plan-cancel');\nfunction planCancelFunc(e) {\n    e.preventDefault();\n    planInput.value = '';\n    inputToggle.toggleOff(planForm);\n}\nplanCancel.addEventListener('click', planCancelFunc);\n\n//project dom display\nconst todayBtn = document.querySelector('#today');\n\nconst itemsList = document.querySelector('#plan-items');\n\nplansList.addEventListener('click', function(e) {\n\n    planTitle.textContent = e.target.textContent;\n    trash.className = e.target.id;\n    trash.style.display = 'block';\n    itemsList.innerHTML = '';\n    console.log(list.planArray);\n\n    list.planArray.forEach((obj) => {\n        obj.toDoItems.forEach((item) => {\n            if(obj.title === e.target.textContent) {\n                itemsList.innerHTML = '';\n                for (let i = 0; i< obj.toDoItems.length; i++){\n                itemsList.innerHTML += `\n                <div class=\"item-buttons\">\n                    <div class=\"item-buttons-left\">\n                    <p class=\"item-title\" id=\"${obj.toDoItems[i].title}\">${obj.toDoItems[i].title}</p>\n                    </div>\n                    <div class=\"item-buttons-right\">\n                        <input type=\"date\" class=\"due-date\" id=\"${obj.toDoItems[i].title}\">\n                        <button class=\"x\" id=\"${obj.toDoItems[i].title}\">x</button>\n                    </div>\n                </div>`; \n                }\n            }\n            })\n    })\n})\n\n\nconst trash = document.querySelector('#trash');\ntrash.addEventListener('click', (e) => {\nplanTitle.textContent = '';\ndynButton.btnDel(trash, '.plan-buttons');\nconst target = e.target;\nlist.arrayDel.del(trash);\ntrash.className = '';\n})\n\nconst primary = new Plan('Primary');\nconst primaryBtn = document.querySelector('#primary');\n\nexport default function primaryLoad(e) {\n    planTitle.textContent = primary.title;\n    trash.style.display = 'none';\n    itemsList.innerHTML = '';\n    console.log(primary);\n    primary.toDoItems.forEach((item) => {\n            itemsList.innerHTML = '';\n            for (let i = 0; i < primary.toDoItems.length; i++){\n            itemsList.innerHTML += `\n                <div class=\"item-buttons\">\n                    <div class=\"item-buttons-left\">\n                    <p class=\"item-title\" id=\"${primary.toDoItems[i].title}\">${primary.toDoItems[i].title}</p>\n                    </div>\n                    <div class=\"item-buttons-right\">\n                        <input type=\"date\" class=\"due-date\" id=\"${primary.toDoItems[i].title}\">\n                        <button class=\"primary-x\" id=\"${primary.toDoItems[i].title}\">x</button>\n                    </div>\n                </div>`; \n                }  \n        })\n}\n\nprimaryBtn.addEventListener('click', primaryLoad);\n\n\n\n//task creation\n\nconst addItem = document.querySelector('#add-item');\nconst itemForm = document.querySelector('#item-form-id');\n\n//event listener for the 'New Task' button and the form it brings up\naddItem.addEventListener('click', () => {\n    inputToggle.toggleOn(itemForm);\n    inputToggle.toggleOff(planForm);\n    planInput.value = ''//empties the input value of the other form\n});\n\n\n// event listener for the form's submit button\nconst itemInput = document.querySelector('#item-input');\nconst itemSubmit = document.querySelector('#item-submit');\nfunction itemSubmitFunc(e) {\n    e.preventDefault();\n    let newItem = new PlanItem(planTitle.textContent, itemInput.value); //planTitle.textcontent is just an argument to match the task with the project of the same name\n    //the following condition matches the DOM title with the task's parent list property\n    if(planTitle.textContent === newItem.parent && planTitle.textContent !== 'Primary'){\n        list.itemToList.addTask(planTitle, newItem);\n        // itemsList.appendChild(dynButton.createButton(newItem.title, 'item-buttons'));\n        itemsList.innerHTML += `\n            <div class=\"item-buttons\">\n                <div class=\"item-buttons-left\">\n                    <p class=\"item-title\" id=\"${newItem.title}\">${newItem.title}</p>\n                </div>\n                <div class=\"item-buttons-right\">\n                    <input type=\"date\" class=\"due-date\" id=\"${newItem.title}\">\n                    <button class=\"x\" id=\"${newItem.title}\">x</button>\n                </div>\n            </div>`;\n        itemInput.value = ''\n        inputToggle.toggleOff(itemForm);\n    } else if (planTitle.textContent === 'Primary') {\n        primary.addToDoItems(newItem);\n        // itemsList.appendChild(dynButton.createButton(newItem.title, 'item-buttons'));\n        itemsList.innerHTML += `\n            <div class=\"item-buttons\">\n                <div class=\"item-buttons-left\">\n                    <p class=\"item-title\" id=\"${newItem.title}\">${newItem.title}</p>\n                </div>\n                <div class=\"item-buttons-right\">\n                    <input type=\"date\" class=\"due-date\" id=\"${newItem.title}\">\n                    <button class=\"primary-x\" id=\"${newItem.title}\">x</button>\n                </div>\n            </div>`;\n        itemInput.value = ''\n        inputToggle.toggleOff(itemForm);\n\n    }\n}\n\nitemSubmit.addEventListener('click', itemSubmitFunc);\n\nconst itemCancel = document.querySelector('#item-cancel');\nfunction itemCancelFunc(e) {\n    e.preventDefault();\n    itemInput.value = '';\n    inputToggle.toggleOff(itemForm);\n}\n\nitemCancel.addEventListener('click', itemCancelFunc);\n\n\n//item bar functions\nconst dueDate = document.querySelectorAll('.due-date');\n\n//task delete button functionality\nitemsList.addEventListener('click', (e) => {\n    if(e.target.className === 'x') {\n        list.planArray.forEach((obj) => {\n            obj.toDoItems.forEach((item) => {\n                if(obj.title === planTitle.textContent) {\n                    obj.removeToDoItems(e.target.id);\n                    itemsList.innerHTML = '';\n                }\n            })\n            for (let i = 0; i< obj.toDoItems.length; i++) {\n            itemsList.innerHTML += `\n            <div class=\"item-buttons\">\n                <div class=\"item-buttons-left\">\n                <p class=\"item-title\" id=\"${obj.toDoItems[i].title}\">${obj.toDoItems[i].title}</p>\n                </div>\n                <div class=\"item-buttons-right\">\n                    <input type=\"date\" class=\"due-date\" id=\"${obj.toDoItems[i].title}\">\n                    <button class=\"x\" id=\"${obj.toDoItems[i].title}\">x</button>\n                </div>\n            </div>`; \n            }\n        })\n    }\n    if(e.target.className === 'primary-x') {\n        primary.toDoItems.forEach(() => {\n                if(primary.title === planTitle.textContent) {\n                    primary.removeToDoItems(e.target.id);\n                    itemsList.innerHTML = '';\n                }\n            })\n            for (let i = 0; i< primary.toDoItems.length; i++) {\n            itemsList.innerHTML += `\n            <div class=\"item-buttons\">\n                <div class=\"item-buttons-left\">\n                <p class=\"item-title\" id=\"${primary.toDoItems[i].title}\">${primary.toDoItems[i].title}</p>\n                </div>\n                <div class=\"item-buttons-right\">\n                    <input type=\"date\" class=\"due-date\" id=\"${primary.toDoItems[i].title}\">\n                    <button class=\"primary-x\" id=\"${primary.toDoItems[i].title}\">x</button>\n                </div>\n            </div>`; \n            }\n        }\n})","import primaryLoad from './DOMfunctions'; \n\ndocument.addEventListener('DOMContentLoaded', primaryLoad);\n"],"names":["Plan","constructor","title","this","_title","_toDoItems","toDoItems","addToDoItems","item","push","removeToDoItems","i","length","splice","PlanItem","parent","dueDate","_parent","_dueDate","value","planArray","document","querySelectorAll","inputToggle","toggle","classList","add","remove","planTitle","querySelector","newPlanBtn","planForm","addEventListener","itemForm","itemInput","plansList","planInput","e","preventDefault","newPlan","plan","appendChild","elemClass","btn","createElement","setAttribute","textContent","itemsList","target","trash","className","id","style","display","innerHTML","console","log","obj","forEach","element","contains","findIndex","primary","primaryLoad","addItem","newItem","task"],"sourceRoot":""}